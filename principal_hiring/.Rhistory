cor.test(dt$immigrant_source, dt$immigrant_target)
dt <-
right_join(
right_join(
as_tibble(edg),
immigrant) %>% rename(immigrant_source=immigrant_5),
immigrant %>% rename(target=source)
) %>% rename(immigrant_target=immigrant_5) %>%
mutate(immigrant_target=ifelse(immigrant_target=="Immigrant",1,0))
dt
dt <-
right_join(
right_join(
as_tibble(edg),
immigrant) %>% rename(immigrant_source=immigrant_5),
immigrant %>% rename(target=source)
) %>% rename(immigrant_target=immigrant_5) %>%
mutate(immigrant_target=ifelse(immigrant_target=="Immigrant",1,0), immigrant_source=ifelse(immigrant_source=="Immigrant",1,0))
cor.test(dt$immigrant_source, dt$immigrant_target)
dt <-
right_join(
right_join(
as_tibble(edg),
immigrant) %>% rename(immigrant_source=immigrant_5),
immigrant %>% rename(target=source)
) %>% rename(immigrant_target=immigrant_5) %>%
mutate(immigrant_target=ifelse(immigrant_target=="Immigrant",1,0), immigrant_source=ifelse(immigrant_source=="Immigrant",1,0))
cor.test(dt$immigrant_source, dt$immigrant_target) %>% tidy()
dt <-
right_join(
right_join(
as_tibble(edg),
immigrant) %>% rename(immigrant_source=immigrant_5),
immigrant %>% rename(target=source)
) %>% rename(immigrant_target=immigrant_5) %>%
mutate(immigrant_target=ifelse(immigrant_target=="Immigrant",1,0), immigrant_source=ifelse(immigrant_source=="Immigrant",1,0))
cor.test(dt$immigrant_source, dt$immigrant_target) %>% kable()
dt <-
right_join(
right_join(
as_tibble(edg),
immigrant) %>% rename(immigrant_source=immigrant_5),
immigrant %>% rename(target=source)
) %>% rename(immigrant_target=immigrant_5) %>%
mutate(immigrant_target=ifelse(immigrant_target=="Immigrant",1,0), immigrant_source=ifelse(immigrant_source=="Immigrant",1,0))
tidy(cor.test(dt$immigrant_source, dt$immigrant_target))
library(tidyr)
dt <-
right_join(
right_join(
as_tibble(edg),
immigrant) %>% rename(immigrant_source=immigrant_5),
immigrant %>% rename(target=source)
) %>% rename(immigrant_target=immigrant_5) %>%
mutate(immigrant_target=ifelse(immigrant_target=="Immigrant",1,0), immigrant_source=ifelse(immigrant_source=="Immigrant",1,0))
tidy(cor.test(dt$immigrant_source, dt$immigrant_target))
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(1, 'mm')),
end_cap = circle(1, 'mm')) +
geom_node_point(aes(size = Friends, color=Immigrant)) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(1, 'mm')) +
geom_node_point(aes(size = Friends, color=Immigrant)) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_node_point(aes(size = Friends, color=Immigrant)) +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(1, 'mm')) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_node_point(aes(size = Friends, color=Immigrant)) +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(2, 'mm')) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(size = Friends, color=Immigrant), alpha=.6) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(size = Friends, color=Immigrant), alpha=.6) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))+
guides(fill = "legend",size = "none")
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(size = Friends, color=Immigrant), alpha=.6) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=8, alpha=1)))+
guides(fill = "legend", size = "none")
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(size = Friends, color=Immigrant), pch=22, alpha=.6) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))+
guides(fill = "legend", size = "none")
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(size = Friends, fill=Immigrant), pch=21, alpha=.6) +
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))+
guides(fill = "legend", size = "none")
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(2, 'mm')) +
geom_node_point(aes(size = Friends, fill=Immigrant), pch=21, alpha=.6) +
scale_fill_manual(values=c("red","blue"))+
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))+
guides(fill = "legend", size = "none")
## as an alternative
## https://www.data-imaginist.com/2017/ggraph-introduction-edges/
ggraph(Network, layout= "nicely") +
#geom_edge_link(edge_colour = "grey") +
geom_edge_link(arrow = arrow(length = unit(2, 'mm')),
end_cap = circle(2.5, 'mm')) +
geom_node_point(aes(size = Friends, fill=Immigrant), pch=21, alpha=.6) +
scale_fill_manual(values=c("red","blue"))+
#geom_node_text()+
theme_graph()+
labs(title=CLASS,
x="",y="",
fill="Category", color="Immigrant status",size="Category")+
theme(legend.position="bottom",
panel.grid.major.x = element_blank() ,
#axis.text.x=element_blank(),
#strip.text = element_text(size = 12),
#axis.ticks.x=element_blank(),
axis.title=element_text(size=14,face="bold"),
legend.key.size = unit(8,"point"),
legend.text = element_text(size=14),
legend.key.height = unit(1, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm'), #change legend key width
legend.title = element_text(size=14)
)  +
guides(fill= guide_legend(override.aes = list(size=4, alpha=1)))+
guides(fill = "legend", size = "none")
d
View(d)
d$unique_class
d$unique_class %>% distinct()
d %>% select(unique_class) %>% distinct()
CLASS <- "IC1_2D"
# EDGES
edg <-
d %>% select(unique_class,id_class,paste("classroom_friend",1:5,sep="")) %>%
pivot_longer(names_to="Key", values_to="id_friend", 3:7)  %>%
filter(unique_class==CLASS) %>% select(id_class,id_friend) %>%
rename(source=id_class,target=id_friend) %>% arrange(source)
# only targets that are also source
edg <- edg %>% filter(target %in% source)
#igraph takes matrices only
edg <- as.matrix(edg)
edg
# EDGES
edg <-
d %>% select(unique_class,id_class,paste("classroom_friend",1:5,sep="")) %>%
pivot_longer(names_to="Key", values_to="id_friend", 3:7)  %>%
filter(unique_class==CLASS) %>% select(id_class,id_friend) %>%
rename(source=id_class,target=id_friend) %>% arrange(source)
# only targets that are also source
edg <- edg %>% filter(target %in% edg$source)
#igraph takes matrices only
edg <- as.matrix(edg)
edg
source <- edg %>% pull(source)
edg <-
d %>% select(unique_class,id_class,paste("classroom_friend",1:5,sep="")) %>%
pivot_longer(names_to="Key", values_to="id_friend", 3:7)  %>%
filter(unique_class==CLASS) %>% select(id_class,id_friend) %>%
rename(source=id_class,target=id_friend) %>% arrange(source)
source <- edg %>% pull(source)
edg <- edg %>% filter(target %in% source)
edg
edg <- as.matrix(edg)
# EDGES
edg <-
d %>% select(unique_class,id_class,paste("classroom_friend",1:5,sep="")) %>%
pivot_longer(names_to="Key", values_to="id_friend", 3:7)  %>%
filter(unique_class==CLASS) %>% select(id_class,id_friend) %>%
rename(source=id_class,target=id_friend) %>% arrange(source)
# only targets that are also source
source_only <- edg %>% pull(source)
edg <- edg %>% filter(target %in% source_only)
#igraph takes matrices only
edg <- as.matrix(edg)
edg
source_only
edg <-
d %>% select(unique_class,id_class,paste("classroom_friend",1:5,sep="")) %>%
pivot_longer(names_to="Key", values_to="id_friend", 3:7)  %>%
filter(unique_class==CLASS) %>% select(id_class,id_friend) %>%
rename(source=id_class,target=id_friend) %>% arrange(source)
edg
View(edg)
source_only <- edg %>% pull(source) %>% distinct()
source_only <- edg %>% select(source) %>% distinct() %>% pull()
source_only
edg <- edg %>% filter(target %in% source_only)
edg
View(edg)
1:10 |> .^2
1:10 |> (.^2)
1:10 |>
2
1:10 |> .^2
1:10 |> .*2
1:10 |> sum(.)
1:10 |> sum()
|>
setwd("~/My Drive/WORK/esperimenti/online/guilt_gender/software/SESSIONS/PROLIFIC/agent_welcome")
library(tidyverse)
read_csv("all_apps_wide-2022-12-22.csv") -> d
setwd("~/My Drive/WORK/esperimenti/online/guilt_gender/software/SESSIONS/PROLIFIC/principal_hiring")
read_csv("all_apps_wide-2022-12-22.csv") -> d
d
d$principal_hiring.1.player.hire
d$principal_hiring.1.player.performance_A_1
d$principal_hiring.1.player.beliefs_A
d
read_csv("all_apps_wide-2022-12-22.csv", col_select=c(
participant._max_page_index,
session.code,
participant.time_started_utc,
participant.prolific_id,
principal_hiring.1.player.hire,
principal_hiring.1.player.performance_A_1,
principal_hiring.1.player.performance_B_1,
principal_hiring.1.player.beliefs_A,
principal_hiring.1.player.beliefs_B), col_types = cols(participant.prolific_id=col_character())) |>
filter(session.code == "ctk3cvup" & participant._max_page_index == 3) |>
mutate(participant.prolific_id=as.character(participant.prolific_id))
d <-
read_csv("all_apps_wide-2022-12-22.csv", col_select=c(
participant._max_page_index,
session.code,
participant.time_started_utc,
participant.prolific_id,
principal_hiring.1.player.hire,
principal_hiring.1.player.performance_A_1,
principal_hiring.1.player.performance_B_1,
principal_hiring.1.player.beliefs_A,
principal_hiring.1.player.beliefs_B), col_types = cols(participant.prolific_id=col_character())) |>
filter(session.code == "ctk3cvup" & participant._max_page_index == 3)
d
d <-
read_csv("all_apps_wide-2022-12-22.csv", col_select=c(
participant._max_page_index,
session.code,
participant.time_started_utc,
participant.prolific_id,
principal_hiring.1.player.hire,
principal_hiring.1.player.performance_A_1,
principal_hiring.1.player.performance_B_1,
principal_hiring.1.player.beliefs_A,
principal_hiring.1.player.beliefs_B), col_types = cols(participant.prolific_id=col_character()))
read_csv("all_apps_wide-2022-12-22.csv") -> d
d
names(d)
d <-
read_csv("all_apps_wide-2022-12-22.csv", col_select=c(
participant._max_page_index,
session.code,
participant.time_started_utc,
participant.prolific_id,
agent_task.1.player.num_correct,
agent_task.1.player.belief,
agent_task.2.player.num_correct), col_types = cols(participant.prolific_id=col_character())) |>
filter(session.code == "p2hgisj4" & participant._index_in_pages == 14)
library(tidyverse)
# collect info about agent -> feed them to principals
d <-
read_csv("all_apps_wide-2022-12-22.csv", col_select=c(
participant._index_in_pages,
session.code,
participant.time_started_utc,
participant.prolific_id,
agent_task.1.player.num_correct,
agent_task.1.player.belief,
agent_task.2.player.num_correct), col_types = cols(participant.prolific_id=col_character())) |>
filter(session.code == "p2hgisj4" & participant._index_in_pages == 14) |>
mutate(participant.prolific_id=as.character(participant.prolific_id)) |>
rename(time.started=participant.time_started_utc,
prolific_id=participant.prolific_id,
performance_1=agent_task.1.player.num_correct,
beliefs=agent_task.1.player.belief,
performance_2=agent_task.2.player.num_correct) |>
select()
write_csv(d,"./input_principal.csv")
d
read_csv("all_apps_wide-2022-12-22.csv", col_select=c(
participant._index_in_pages,
session.code,
participant.time_started_utc,
participant.prolific_id,
agent_task.1.player.num_correct,
agent_task.1.player.belief,
agent_task.2.player.num_correct), col_types = cols(participant.prolific_id=col_character())) |>
filter(session.code == "p2hgisj4" & participant._index_in_pages == 14)
read_csv("all_apps_wide-2022-12-22.csv", col_select=c(
participant._index_in_pages,
session.code,
participant.time_started_utc,
participant.prolific_id,
principal_hiring.1.player.hire,
principal_hiring.1.player.performance_A_1,
principal_hiring.1.player.performance_B_1,
principal_hiring.1.player.beliefs_A,
principal_hiring.1.player.beliefs_B), col_types = cols(participant.prolific_id=col_character())) |>
filter(session.code == "ctk3cvup" & participant._index_in_pages == 4)
